using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;

namespace FileSignatures
{
    /// <summary>
    /// This part of the SimpleSignatures class is generated by SimpleSignatures.tt
    /// </summary>
    [ContentIdentifier]
    internal partial class SimpleSignatures : IContentIdentifier
    {
        #region IContentIdentifier Members

        public IEnumerable<ContentFormat> Identify(IByteContainer container)
        {
            bool isMatch;

            // archive/zip
            isMatch = Match(
                container, 0x00000000, new short[]
                {
                    0x50, 0x4b, 0x03, 0x04
                });
            if (isMatch)
                yield return new ContentFormat("archive", "zip", string.Empty, 4);

            // archive/7z
            isMatch = Match(
                container, 0x00000000, new short[]
                {
                    0x37, 0x7a, 0xbc, 0xaf, 0x27, 0x1c
                });
            if (isMatch)
                yield return new ContentFormat("archive", "7z", string.Empty, 6);

            // image/bmp
            isMatch = Match(
                container, 0x00000000, new short[]
                {
                    0x42, 0x4d
                });
            if (isMatch)
                yield return new ContentFormat("image", "bmp", string.Empty, 2);

            // image/jpeg
            isMatch = Match(
                container, 0x00000000, new short[]
                {
                    -1, -1, 0xff, 0xe0, -1, -1, 0x4a, 0x46, 0x49, 0x46
                });
            if (isMatch)
                yield return new ContentFormat("image", "jpeg", string.Empty, 6);

            // image/png
            isMatch = Match(
                container, 0x00000000, new short[]
                {
                    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a
                });
            if (isMatch)
                yield return new ContentFormat("image", "png", string.Empty, 8);

            // image/gif
            isMatch = Match(
                container, 0x00000000, new short[]
                {
                    0x47, 0x49, 0x46, 0x38, 0x39, 0x61
                });
            if (isMatch)
                yield return new ContentFormat("image", "gif", string.Empty, 6);

            yield break;
        }

        #endregion
    }
}